% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_error.R
\name{get_error}
\alias{get_error}
\title{Get R objects from model with error}
\usage{
get_error(conditiondir, envir = parent.frame())
}
\arguments{
\item{conditiondir}{A directory, either a full or relative path,
that will be used to save the results.
The directory will be created recursively if it does not already exist.}

\item{envir}{The environment where the data should be loaded.
The default, \code{parent.frame()} will load all objects to your current
environment.}
}
\value{
Several R objects are loaded into the specified \code{envir},
including the model results, which is called 'out'. Additionally, a web
browser is opened navigating users to the code of \link{VAST_do}
to facilitate rapid rerunning of the model using the loaded objects.
}
\description{
Load two \code{RData} objects, one with the error message
and one with the R objects used to produce the model.
}
\details{
This function will replace all objects in your current environment with
those found using \link[base:load]{base::load} if any names overlap. As recommended in
\code{?load}, it is safer to use the \verb{envir =} parameter to load
into a different environment or use \code{attach} as a wrapper for
\code{\link[base:load]{base::load()}}. We leave this up to the user and use a default of loading
everything into the current environment. We recommend running
\code{ls()} prior to running this function so you can see
which objects are new and which were previously in your environment.
}
\examples{
# Create a new environment
env1 <- new.env()
# Load objects into this environment and see the error message from fit_model
\dontrun{
get_error(conditiondir = , envir = env1)
ls(envir = env1)
get("out", envir = env1)
}
rm(env1)
}
\author{
Kelli F. Johnson
}
